{"name":"Bootstrap Forms","google":"UA-12012976-13","tagline":"Bootstrap Forms makes Twitter's Bootstrap on Rails easy!","body":"Bootstrap Forms\r\n===============\r\n[![Build Status](https://secure.travis-ci.org/sethvargo/bootstrap_forms.png?branch=master)](http://travis-ci.org/sethvargo/bootstrap_forms)\r\n\r\nBootstrap Forms is a nice Rails generator that makes working with [Bootstrap (by Twitter)](http://twitter.github.com/bootstrap) even easier on Rails. \r\n\r\nForms with Bootstrap are crowded with additional layout markup. While it's necessary, you shouldn't have to type it every time you create a form! That's why I created Bootstrap Forms.\r\n\r\nBootstrap 2.0 Compliant!\r\n------------------------\r\nA super special thanks to [vincenzor](https://github.com/vincenzor) for updating `bootstrap_forms` to comply with the new methods and features in Twitter Bootstrap 2.0. \r\n\r\nTo get these new features, ensure you are using `bootstrap_forms ~> 2.0.0`.\r\n\r\nNote/Caution/Warning\r\n--------------------\r\nThere were **major** changes in the release of version `0.1.0`:\r\n\r\n 1. The gem name has officially changed from `bootstrap-forms` to `bootstrap_forms` to match gem naming conventions. The old gem still exists on rubygems for legacy applications, however, you should update to the new gem as quickly as possible. It's faster and more stable. The old gem is no longer maintained.\r\n 2. `form_for` is no longer overridden by default. There were multiple users who were concerned that this behavior was ill advised. Instead, a new form helper, `bootstrap_form_for` has been created. This is in line with other form building libraries.\r\n 3. The gem is now a Rails 3 Engine. As such, **Bootstrap Forms will not work in < Rails 3.0**. The engine is automatically mounted when including the gem in your `Gemfile`.\r\n\r\nInstallation\r\n------------\r\nAdd it to your `Gemfile`:\r\n\r\n    gem 'bootstrap_forms'\r\n\r\nDon't forget to run the `bundle` command. The gem will add the method `bootstrap_form_for` for use in your project. This is different from `bootstrap_forms < 0.1.0`. In previous versions, the default form builders were overridden by default. With backlash from various community members, this is no longer the default.\r\n\r\nBe sure to restart your Rails server after installing the gem.\r\n\r\nWhy?\r\n----\r\nWith Bootstrap, you would need the following code for a form:\r\n\r\n```haml\r\n/ using HAML\r\n= form_for @model do |f|\r\n  .clearfix\r\n    %label MyLabel\r\n    .input\r\n      = f.text_area :field, :opts => {...}\r\n```\r\n\r\nUsing Bootstrap Forms, this is **much** simpler:\r\n\r\n```haml\r\n/ using HAML\r\n= bootstrap_form_for @model do |f|\r\n  = f.text_area :field, :opts => {...}\r\n```\r\n\r\nThe custom form builder will automatically wrap everything for you. This helps clean up your view layer significantly!\r\n\r\nAdditional Form Methods\r\n-----------------------\r\nJust when you thought you were done... Bootstrap Forms includes additional form helpers that make life **a lot** easier! For example, the markup required for a list of checkboxes is quite cumbersome... well, it used to be.\r\n\r\n### collection_check_boxes\r\n`collection_check_boxes` behaves very similarly to `collection_select`:\r\n\r\n```haml\r\n= f.collection_check_boxes :category_ids, Category.all, :id, :name\r\n```\r\n\r\n### collection_radio_buttons\r\nSee description above...\r\n\r\n```haml\r\n= f.collection_radio_buttons :primary_category_id, Category.all, :id, :name\r\n```\r\n\r\n### radio_buttons\r\n\r\n```haml\r\n= f.radio_buttons :published, { \"Published\" => true, \"Unpublished\" => false }\r\n```\r\n\r\nRuby 1.8 doesn't guarantee hashes are ordered. If you care, pass in nested arrays or `ActiveSupport::OrderedHash`.\r\n\r\nUneditable Input\r\n----------------\r\nBootstrap Forms adds another helper method that generates the necessary markup for uneditable inputs:\r\n\r\n```haml\r\n= f.uneditable_input :name\r\n```\r\n\r\nyields:\r\n\r\n```html\r\n<div class=\"clearfix\">\r\n  <label for=\"organization_name\">Organization Name</label>\r\n  <div class=\"input\">\r\n    <span class=\"uneditable-input\">The Variety Hour</span>\r\n  </div>\r\n</div>\r\n```\r\n\r\nSubmit Tag\r\n----------\r\nBootstrap Forms also adds a default actions panel when you call `f.submit`:\r\n\r\n```haml\r\n= f.submit\r\n```\r\n    \r\ngenerates:\r\n\r\n```html\r\n<div class=\"actions\">\r\n  <input type=\"submit\" value=\"...\" class=\"btn primary\" />\r\n  <a href=\"...\" class=\"btn\">Cancel</a>\r\n</div>\r\n```\r\n\r\nYou can skip the cancel button by passing the `:include_cancel` button a `false` value.\r\n\r\nPretty swell if you ask me.\r\n\r\nAdding More Options\r\n-------------------\r\nYou can add as many options to any form helper tag. If they are interpreted by Bootstrap Forms, they are interpreted and rendered in the output. If not, they are passed along as values to the final HTML form object.\r\n\r\n### Available Options\r\n\r\n<table>\r\n  <tr>\r\n    <th>Name</th>\r\n    <th>Description</th>\r\n    <th>Usage</th>\r\n  </tr>\r\n  <tr>\r\n    <th>help_inline</th>\r\n    <td>Add inline help text</td>\r\n    <td>= f.text_field :name, :help_inline => 'help me!'</td>\r\n  </tr>\r\n  <tr>\r\n    <th>help_block</th>\r\n    <td>Add block help text (below)</td>\r\n    <td>= f.text_field :name, :help_block => 'help me!'</td>\r\n  </tr>\r\n  <tr>\r\n    <th>error</th>\r\n    <td>Styles the field as error (red)</td>\r\n    <td>= f.text_field :name, :error => 'This is an error!'</td>\r\n  </tr>\r\n  <tr>\r\n    <th>success</th>\r\n    <td>Styles the field as success (green)</td>\r\n    <td>= f.text_field :name, :success => 'This checked out OK'</td>\r\n  </tr>\r\n  <tr>\r\n    <th>warning</th>\r\n    <td>Styles the field as warning (yellow)</td>\r\n    <td>= f.text_field :name, :warning => 'Take a look at this...'</td>\r\n  </tr>\r\n  <tr>\r\n    <th>prepend</th>\r\n    <td>Adds special text to the front of the input</td>\r\n    <td>= f.text_field :name, :prepend => '@'</td>\r\n  </tr>\r\n  <tr>\r\n    <th>append</th>\r\n    <td>Adds special text at the end of the input</td>\r\n    <td>= f.text_field :name, :append => '@'</td>\r\n  </tr>\r\n</table>\r\n\r\nInternationalization/Custom Errors\r\n----------------------------------\r\nAs of `1.0.2`, `bootstrap_forms` supports I18n! More support is being added, but you can change the error header and cancel button like this:\r\n\r\n```yaml\r\n# config/locales/en.yml\r\nen:\r\n  bootstrap_forms:\r\n    errors:\r\n      header: 'Your %{model} is wrong!'\r\n    buttons:\r\n      cancel: 'Forget it!'\r\n```\r\n\r\nObviously you can also change to a different `lang.yml` file and use the same syntax.\r\n\r\nContributing\r\n------------\r\nI'm pretty dam active on github. Fork and submit a pull request. Most of my pull requests are merged the same day. Make sure you:\r\n\r\n - **Squash** into a single commit (unless it makes sense to have multiple commits)\r\n - **Test/Spec** the changes\r\n - **Document** your changes\r\n\r\nLicense\r\n-------\r\nCopyright (c) 2012 Seth Vargo\r\n\r\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\r\n\r\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n","note":"Don't delete this file! It's used internally to help with page regeneration."}